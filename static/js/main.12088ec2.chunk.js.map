{"version":3,"sources":["assets/images/arrow.png","assets/images/slide-1.jpg","assets/images/slide-2.jpg","assets/images/cadastro.jpg","assets/images/dog.jpg","serviceWorker.js","components/Index.jsx","services/contatosService.js","components/Cadastro.jsx","components/mask.js","components/Login.jsx","components/Roots.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","settings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","Login","props","react_default","a","createElement","className","lib_default","src","icon1","alt","icon2","react_router_dom","to","ContatosService","contato","fetch","method","body","JSON","stringify","headers","Accept","Content-Type","then","response","json","Cadastro","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","type","nome","cpf","senha","incluir","bind","assertThisInitialized","alterarDados","setType","alerta","setState","contatos","email","strCpf","soma","resto","i","replace","console","log","parseInt","substring","isValidCPF","alertaCPF","reload","event","target","name","value","defineProperty","e","document","getElementById","style","visibility","arrow","cat","id","checked","onClick","for","onChange","placeholder","react_input_mask_default","mask","React","Component","dog","defaultChecked","placeHolder","Roots","basename","es","atEnter","opacity","atLeave","atActive","react_router","exact","path","component","Index","ReactDOM","render","components_Roots","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12088ec2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.485c1fea.png\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.dc0d0191.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.23cad2d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cadastro.084e30d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog.cc730595.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport Slider from 'react-slick';\nimport icon1 from '../assets/images/slide-1.jpg';\nimport icon2 from '../assets/images/slide-2.jpg';\nimport '../assets/styles/index.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst settings = {\n  dots: false,\n  arrows: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  autoplay: true,\n  autoplaySpeed: 4000,\n};\n\nconst Login = (props) => {\n\n  return (\n      <div className=\"background\">\n        <div className=\"wrap-slider\">\n          <Slider {...settings}>\n            <div className='slider' >\n              <div className=\"content-slider\">\n                <img src={icon1} alt=\"\" />\n              </div>\n            </div>\n            <div>\n              <div className=\"content-slider\">\n                <img src={icon2} alt=\"\" />\n              </div>\n            </div>\n          \n          </Slider>\n          <div className=\"wrap-content-slider\">\n            <div className=\"logo\">\n              <p>Adotar é saber<br/>\n              deixar alguém te amar</p>\n            </div>\n            <div className=\"wrap-buttons-login\">\n              <Link to=\"/login\">Entrar</Link>\n              <Link to=\"/cadastro\">Cadastrar</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default Login;\n","export const ContatosService = {\n    listar() {\n        return fetch('http://localhost:3300/wscontatos')\n            .then(response => response.json());\n    },\n    remover(id) {\n        return fetch('http://localhost:3300/wscontatos/' + id, {\n            method: 'DELETE'\n        })\n            .then(response => response.json());\n    },\n    adicionar(contato) {\n        return fetch('http://localhost:3300/wscontatos', {\n            method: 'POST',\n            body: JSON.stringify(contato),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => response.json());\n    }\n}","import React from 'react';\nimport '../assets/styles/cadastro.css';\nimport cat from '../assets/images/cadastro.jpg';\nimport arrow from '../assets/images/arrow.png';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {isValidCPF } from './mask'\nimport InputMask from 'react-input-mask';\nimport { ContatosService } from '../services/contatosService';\n\nclass Cadastro extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: 'usuario',\n      nome: '',\n      cpf: '',\n      senha: '',\n    }\n\n    this.incluir = this.incluir.bind(this);\n    this.alterarDados = this.alterarDados.bind(this);\n    this.setType = this.setType.bind(this)\n    this.alerta = this.alerta.bind(this)\n\n    this.setState({\n      type: \"usuario\"\n     })\n\n  }\n\n\nincluir() {\n    const contatos = this.state;\n\n    if (this.state.nome == '' || this.state.cpf == '' || this.state.email =='' || this.state.senha == '' ){\n      this.alerta();\n    }\n    else if (!isValidCPF(this.state.cpf)) {\n      this.alertaCPF();\n\n    } else {\n      ContatosService.adicionar(contatos);\n      window.location.reload();\n    }\n}\n\nalterarDados(event) {\n  const { target } = event, { name, value } = target;\n  this.setState({\n      [name]: value\n  });\n}\n\nsetType(e) {\n  this.setState({\n   type: e.target.value\n  })\n}\n\n  alerta(){\n    document.getElementById(\"alerta\").style.visibility = \"visible\";\n    document.getElementById(\"alertaCPF\").style.visibility = \"hidden\";\n\n  }\n  alertaCPF(){\n    document.getElementById(\"alertaCPF\").style.visibility = \"visible\";\n    document.getElementById(\"alerta\").style.visibility = \"hidden\";\n  }\n\n  render() {\n    const {type} = this.state\n    const { state } = this;\n\n    return (\n        <div className=\"background\">\n        <div className=\"container\">\n\n\n        <div className='wrap-header'>\n      <div className=\"container\">\n        <button className=\"bt-back\">\n        <Link to=\"/\"><img src={arrow} alt=\"\" /></Link>\n        </button>\n        <h1>Cadastrar</h1>\n      </div>\n    </div>\n        <form  className='login-form row'> \n        <img src= {cat} alt=\"\" className='img' />\n\n      <div className=\"col-2 type\">   \n          <input type=\"radio\" id=\"option\" checked={type == \"usuario\"}  onClick={this.setType} value=\"usuario\" />\n          <label for=\"option\">Cadastrar Usuário</label>\n      </div>\n      <div className=\"col-2 type\">   \n          <input type=\"radio\" id=\"option2\" checked={type == \"ong\"}  onClick={this.setType} value=\"ong\"  />\n          <label for=\"option2\">Cadastrar ONG</label>\n      </div>\n              \n\n            <div className=\"col-4\">        \n                <input type=\"text\"  name='nome' value={state.nome} onChange={this.alterarDados} placeholder='Nome' className='input'/>\n            </div>\n\n            <div className=\"col-4\">          \n              <InputMask mask=\"999.999.999-99\" onChange={this.alterarDados} name='cpf' type=\"text\"  value={state.cpf}  placeholder='CPF' className='input'/>\n               <p id='alertaCPF'>CPF inválido!</p>        \n            </div>\n\n            <div className=\"col-4\">\n                <input type=\"text\"  value={state.email} name='email' onChange={this.alterarDados} placeholder='Email' className='input'/>\n            </div>\n\n            <div className=\"col-4\">       \n                <input type=\"password\"  value={state.senha}  name='senha' onChange={this.alterarDados} placeholder='Senha' className='input' /> \n            </div>\n              <br/> \n              <p id='alerta'>Preencha todos os campos!</p>  \n            <button type='button'  className=\"button\" onClick={this.incluir}>Cadastrar</button>\n          </form>\n          </div>\n  \n      </div>\n    );\n  }\n}\n\nexport default Cadastro;\n\n","export const isValidCPF = strCpf => {\n    var soma;\n    var resto;\n    var i = 0;\n    var strCpf = strCpf.replace(\".\", \"\");\n    strCpf = strCpf.replace(\".\", \"\");\n    strCpf = strCpf.replace(\"-\", \"\");\n    console.log(strCpf)\n    soma = 0;\n    if (strCpf == \"00000000000\") {\n        return false;\n    }\n    for (i = 1; i <= 9; i++) {\n        soma = soma + parseInt(strCpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = soma % 11;\n    console.log(strCpf)\n    if (resto == 10 || resto == 11 || resto < 2) {\n        resto = 0;\n    } else {\n        resto = 11 - resto;\n    }\n    if (resto != parseInt(strCpf.substring(9, 10))) {\n        return false;\n    }\n    console.log(strCpf)\n    soma = 0;\n    for (i = 1; i <= 10; i++) {\n        soma = soma + parseInt(strCpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = soma % 11;\n    console.log(strCpf)\n    if (resto == 10 || resto == 11 || resto < 2) {\n        resto = 0;\n    } else {\n        resto = 11 - resto;\n    }\n    if (resto != parseInt(strCpf.substring(10, 11))) {\n        return false;\n    }\n    console.log(strCpf)\n    return true;\n    }\n\n\n\n\n","import React from 'react';\nimport '../assets/styles/cadastro.css';\nimport dog from '../assets/images/dog.jpg';\nimport arrow from '../assets/images/arrow.png';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InputMask from 'react-input-mask';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n        <div className=\"background\">\n        <div className=\"container\">\n\n\n        <div className='wrap-header'>\n      <div className=\"container\">\n        <button className=\"bt-back\">\n        <Link to=\"/\"><img src={arrow} alt=\"\" /></Link>\n        </button>\n        <h1>Entrar</h1>\n      </div>\n    </div>\n        <form  className='login-form row'> \n        <img src={dog} alt=\"\" className='img' />\n\n      <div className=\"col-2 type\">   \n          <input type=\"radio\" id=\"option\" name=\"selector\" value=\"usuario\" defaultChecked/>\n          <label for=\"option\">Usuário</label>\n      </div>\n      <div className=\"col-2 type\">   \n          <input type=\"radio\" id=\"option2\" name=\"selector\" value=\"ong\" />\n          <label for=\"option2\">ONG</label>\n      </div>\n\n            <div className=\"col-4\">        \n                <input type=\"text\" placeHolder='Email' className='input'/>\n            </div>\n\n            <div className=\"col-4\">          \n              <InputMask mask=\"999.999.999-99\" type=\"text\" placeHolder='CPF' className='input'/>\n            </div>\n\n            <div className=\"col-4\">       \n                <input type=\"password\" placeHolder='Senha' className='input'/>    \n            </div>\n\n            <input type=\"submit\" className=\"button\" value=\"Entrar\"  />\n          </form>\n          </div>\n  \n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Index from './Index';\nimport { AnimatedSwitch } from 'react-router-transition';\n\nimport Cadastro from '../components/Cadastro';\nimport Login from '../components/Login';\n\n\nconst Roots = () => (\n<Router basename=\"React\">\n<AnimatedSwitch\n      atEnter={{ opacity: 0 }}\n      atLeave={{ opacity: 0 }}\n      atActive={{ opacity: 1 }}\n      className=\"switch-wrapper\"\n    >\n    <Route exact path=\"/\" component={Index} />\n    <Route path=\"/cadastro\" component={Cadastro} />\n    <Route path=\"/login\" component={Login} />\n    </AnimatedSwitch>\n</Router>\n\n)\n\nexport default Roots;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Roots from './components/Roots';\n\nReactDOM.render(<Roots />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}